# -*- coding: utf-8 -*-
"""JAVAS JADI

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ICVzZ1J9Ixbf3nrPQqGpNyX-aIQIf7DW
"""

import tensorflow as tf
from keras.models import Sequential
import pandas as pd
from keras.layers import Dense

data = pd.read_csv('Covid Dataset.csv')

data.describe()

data.info()

import numpy as np

labels=data['COVID-19']
features = data.iloc[:,:-1]

from sklearn.model_selection import train_test_split

X=features

y=np.ravel(labels)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

from sklearn.preprocessing import LabelEncoder
e=LabelEncoder()
data=data.apply(e.fit_transform).astype(int)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler().fit(X_train)

X_train = scaler.transform(X_train)

X_test = scaler.transform(X_test)

from keras.models import Sequential
from keras.layers import Dense

model = Sequential()

model.add(Dense(18, activation='relu', input_shape=(18,)))

model.add(Dense(18, activation='relu'))

model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy',
              optimizer='sgd',
              metrics=['accuracy'])
                   
model.fit(X_train, y_train,epochs=100, batch_size=1, verbose=1)

model.summary()

for layer in model.layers:
    weights = layer.get_weights()

y_pred = model.predict_classes(X_test)

score = model.evaluate(X_test, y_test,verbose=1)

print(score)

model_1=model
model_1.save("my_model.h5")